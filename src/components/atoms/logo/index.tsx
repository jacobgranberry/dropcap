import React, { FC } from 'react';
import Link from 'next/link';
import { Box } from 'rebass';

interface ILogo {
  color?: string;
  width?: number;
}

export const Logo: FC<ILogo> = ({ color = 'black', width = 185 }) => (
  <Box width={width}>
    <Link href="/">
      <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 185 48" fill="none">
        <path
          d="M20.248 40.232C34.984 40.232 46.504 32.552 46.504 17.72C46.504 5.288 38.152 0.103997 28.552 0.103997C25.096 0.103997 21.208 1.16 19.288 1.16C17.512 1.16 16.216 0.823999 13.672 0.823999V1.544C16.072 1.688 17.368 1.976 17.368 15.608V19.976C17.368 33.368 16.36 34.76 13.192 34.856V35.576C16.12 35.576 17.512 35.24 19.288 35.24C20.296 35.24 21.448 35.336 22.504 35.432L22.84 34.904C22.12 34.088 21.304 32.312 21.304 17.912C21.304 6.728 21.832 3.8 22.312 2.744C22.312 2.744 24.424 1.16 28.12 1.16C35.32 1.16 41.224 4.808 41.224 17.912C41.224 32.504 33.784 39.08 20.056 39.08C10.072 39.08 4.984 33.416 4.984 27.224C4.984 25.208 5.512 23.144 6.616 21.224L6.136 20.84C2.968 20.84 0.52 23.432 0.52 27.272C0.52 35.96 9.88 40.232 20.248 40.232ZM50.1119 35.576C52.3679 35.576 53.5679 35.24 55.4879 35.24C57.4079 35.24 60.7199 35.576 62.9759 35.576V34.856C59.2319 34.856 57.2639 33.32 57.2639 28.088C57.2639 25.688 57.7919 22.808 57.7919 22.808C59.0399 18.728 61.1999 17.144 62.5919 17.144C64.1279 17.144 65.0399 18.248 65.3279 21.848H65.9999C66.1439 16.856 67.1519 14.456 67.1519 14.456L66.6719 13.688C66.6719 13.688 65.9999 13.352 64.7999 13.352C62.0159 13.352 59.1839 16.808 57.8879 19.784L57.6959 19.688C57.6959 16.76 57.6479 15.416 57.3119 13.88L56.6399 13.496C56.6399 13.496 55.2479 14.12 50.1119 14.12V14.84C52.2239 14.84 53.7599 16.136 53.7599 21.896V26.12C53.7599 33.368 52.5599 34.856 50.1119 34.856V35.576ZM79.8494 35.816C86.3294 35.816 90.4574 31.496 90.4574 24.536C90.4574 17.576 86.6174 13.304 80.1374 13.304C73.6574 13.304 69.5294 17.96 69.5294 24.92C69.5294 31.88 73.3694 35.816 79.8494 35.816ZM79.8494 34.712C76.0094 34.712 74.3774 31.256 74.3774 24.92C74.3774 18.584 76.2974 14.408 80.1374 14.408C83.9774 14.408 85.6094 18.2 85.6094 24.536C85.6094 30.872 83.6894 34.712 79.8494 34.712ZM95.821 47.624C98.125 46.952 101.197 46.76 103.885 46.76V46.04C101.533 46.04 100.045 45.368 99.901 34.76C100.813 35.048 102.589 35.528 104.845 35.528C110.461 35.528 116.365 32.072 116.365 23.576C116.365 16.856 112.141 13.496 107.869 13.496C102.589 13.496 100.477 18.68 100.477 18.68L100.285 18.584C100.285 15.704 99.901 13.88 99.901 13.88L99.229 13.496C99.229 13.496 97.261 14.12 92.125 14.12V14.84C94.957 14.984 96.205 16.856 96.205 28.76V32.6C96.205 39.992 95.917 44.696 95.341 47.192L95.821 47.624ZM105.229 34.472C101.917 34.472 100.477 32.36 99.901 31.16C99.949 25.64 100.381 21.704 100.381 21.704C101.581 18.488 103.597 15.128 107.005 15.128C110.077 15.128 111.613 18.776 111.613 23.864C111.613 30.872 108.877 34.472 105.229 34.472ZM129.567 35.816C133.599 35.816 135.903 33.896 137.295 32.792L136.815 32.072C134.943 33.56 133.023 34.136 131.247 34.136C127.887 34.136 124.719 29.96 124.719 23.672C124.719 17.816 127.551 14.312 130.527 14.312C133.839 14.312 135.087 16.664 135.999 21.656H136.623C136.623 21.656 136.719 18.344 137.583 15.416L137.199 14.696C137.199 14.696 134.655 13.304 130.767 13.304C125.343 13.304 119.967 16.856 119.967 24.392C119.967 31.736 123.903 35.816 129.567 35.816ZM159.64 41.96C160.552 41.96 161.416 41.816 162.232 41.528L161.992 40.76C161.656 40.856 161.32 40.904 161.032 40.904C158.728 40.904 157.096 38.024 157.096 31.064V20.264C157.096 15.608 155.464 13.304 149.944 13.304C147.304 13.304 144.376 14.024 142.648 14.936L142.312 15.752C142.84 17.288 142.84 20.888 142.84 20.888H143.656C144.376 16.472 146.2 14.552 149.272 14.552C152.056 14.552 153.16 17.528 153.16 21.848V23.192C152.344 23.144 151.624 23.096 150.904 23.096C143.992 23.096 140.68 26.888 140.68 30.824C140.68 34.232 142.984 35.816 146.392 35.816C149.944 35.816 151.96 33.8 152.968 31.832L153.16 31.88C153.112 32.648 153.064 33.224 153.064 33.752C153.064 39.944 156.424 41.96 159.64 41.96ZM148.12 33.896C146.248 33.896 145.288 32.504 145.288 30.344C145.288 27.992 146.776 24.104 151.576 24.104C152.056 24.104 152.536 24.104 153.16 24.2V27.176C152.776 31.688 150.664 33.896 148.12 33.896ZM164.024 47.624C166.328 46.952 169.4 46.76 172.088 46.76V46.04C169.736 46.04 168.248 45.368 168.104 34.76C169.016 35.048 170.792 35.528 173.048 35.528C178.664 35.528 184.568 32.072 184.568 23.576C184.568 16.856 180.344 13.496 176.072 13.496C170.792 13.496 168.68 18.68 168.68 18.68L168.488 18.584C168.488 15.704 168.104 13.88 168.104 13.88L167.432 13.496C167.432 13.496 165.464 14.12 160.328 14.12V14.84C163.16 14.984 164.408 16.856 164.408 28.76V32.6C164.408 39.992 164.12 44.696 163.544 47.192L164.024 47.624ZM173.432 34.472C170.12 34.472 168.68 32.36 168.104 31.16C168.152 25.64 168.584 21.704 168.584 21.704C169.784 18.488 171.8 15.128 175.208 15.128C178.28 15.128 179.816 18.776 179.816 23.864C179.816 30.872 177.08 34.472 173.432 34.472Z"
          fill={color}
        />
      </svg>
    </Link>
  </Box>
);

// export const Logo = () => {
//   const [logoUrl, setLogoUrl] = useState('');

//   const storage = firebase.storage().ref();

//   function getImage(image) {
//     storage
//       .child(`${image}`)
//       .getDownloadURL()
//       .then((url) => {
//         setLogoUrl(url);
//       })
//       .catch((error) => {
//         // Handle any errors
//         console.log({ error });
//       });
//   }
//   useEffect(() => {
//     getImage('ui/dropcap_logo.svg');
//   }, []);

//   return <Image src={logoUrl} />;
// };
